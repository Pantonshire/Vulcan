package com.~MODID~;

import net.minecraft.client.Minecraft;
import net.minecraft.client.renderer.block.model.ModelResourceLocation;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.init.Items;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.util.ActionResult;
import net.minecraft.util.EnumActionResult;
import net.minecraft.util.EnumHand;
import net.minecraft.world.World;

import net.minecraft.block.Block;
import net.minecraft.init.Blocks;

import net.minecraftforge.fml.relauncher.Side;
import net.minecraftforge.fml.relauncher.SideOnly;

import java.util.Collection;
import java.util.HashMap;
import java.util.Random;

public final class BlockManager {

    private HashMap<String, Block> blocks;

    public static CreativeTabs tab = new CreativeTabs("~MODID~_blocks") {
        @SideOnly(Side.CLIENT)
        public ItemStack getTabIconItem() {
            return new ItemStack(VulcanMod.blocks.getRandomBlock(VulcanMod.rand));
        }
    };

    public BlockManager() {
        blocks = new HashMap<String, Block>();
    }

    public Block getBlock(String name) {
        if(blocks.containsKey(name)) {
            return blocks.get(name);
        } else {
            System.err.println("Could not find a block called \'" + name + "\'.");
            return Blocks.DIRT;
        }
    }

    public Block getRandomBlock(Random random) {
        if(!blocks.isEmpty()) {
            Collection<Block> values = blocks.values();
            int index = random.nextInt(values.size());
            int i = 0;
            for(Block block : values) {
                if(i == index) { return block; }
                ++i;
            }
        }

        return Blocks.DIRT;
    }

    public Block addBlock(String name, Block block) {
        blocks.put(name, block);
        VulcanMod.registry.scheduleRegisterBlock(block, name);
        return block;
    }

    public void registerModels() {
        net.minecraft.client.renderer.RenderItem renderItem = Minecraft.getMinecraft().getRenderItem();
        for(String blockName : blocks.keySet()) {
            renderItem.getItemModelMesher().register(Item.getItemFromBlock(getBlock(blockName)), 0, new ModelResourceLocation("~MODID~:" + blockName, "inventory"));
        }
    }
}