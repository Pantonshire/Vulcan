package com.~MODID~;

import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.util.DamageSource;
import net.minecraft.util.EnumHand;

import java.lang.reflect.Method;
import java.lang.reflect.InvocationTargetException;

public final class MessageUtils {

    public static void attack(EntityPlayer player, int damage) {
        player.attackEntityFrom(DamageSource.GENERIC, damage);
    }

    public static void swingArm(EntityPlayer player, boolean main) {
        player.swingArm(main ? EnumHand.MAIN_HAND : EnumHand.OFF_HAND);
    }

    public static void kill(EntityPlayer player) {
        player.attackEntityFrom(DamageSource.OUT_OF_WORLD, 10000);
    }

    public static void makeJump(EntityLivingBase entity) {
        if(entity.onGround) {
            try {
                Method[] methods = EntityLivingBase.class.getDeclaredMethods();
                for(Method method : methods) {
                    if(method.getName().equals("jump")) {
                        method.setAccessible(true);
                        method.invoke(entity);
                    }
                }
            } catch(IllegalAccessException | InvocationTargetException | SecurityException exception) {
                exception.printStackTrace();
            }
        }
    }

    public static void explode(EntityLivingBase entity, float strength) {
        if(!entity.getEntityWorld().isRemote) {
            if(strength > 100f) {
                strength = 100f;
            } else if(strength < 0f) {
                strength = 0f;
            }

            entity.getEntityWorld().createExplosion(entity, entity.posX, entity.posY, entity.posZ, strength, true);
        }
    }
}